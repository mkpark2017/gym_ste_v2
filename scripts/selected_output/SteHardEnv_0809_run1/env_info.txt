input state = [wind_direction, wind speed (m/s), duration time, current pos (x,y), last action (only direction), last concentration, concentration (max 100 mg/m^3), highest conc]

output state = [continuous direction]

    parser.add_argument('--hidden1', default=1000, type=int, help='hidden num of first fully connect layer')
    parser.add_argument('--hidden2', default=400, type=int, help='hidden num of second fully connect layer')
    parser.add_argument('--hidden3', default=300, type=int, help='hidden num of third fully connect layer')

    parser.add_argument('--rate', default=0.0001, type=float, help='learning rate')
    parser.add_argument('--prate', default=0.00001, type=float, help='policy net learning rate (only for DDPG)')
    parser.add_argument('--discount', default=0.95, type=float, help='Discount factor for next Q values')
    parser.add_argument('--init_w', default=0.003, type=float, help='Initial network weight')
    parser.add_argument('--tau', default=0.0001, type=float, help='moving average for target network')
    # Set learning parameter
    parser.add_argument('--warmup', default=2000000, type=int, help='time without training but only filling the replay memory')
    #warmup 5e5
    parser.add_argument('--rmsize', default=2000000, type=int, help='Memory size, after exceeding this limits, older entries will be replaced by newer ones')
    #repeat memory 1e7
    parser.add_argument('--bsize', default=64, type=int, help='minibatch size')
    parser.add_argument('--window_length', default=1, type=int, help='Number of observations to be concatenated as "state", (e.g., Atrai game one used this)')
    parser.add_argument('--train_iter', default=10000000, type=int, help='Total number of steps for training')
    #tain iter 1e6
    parser.add_argument('--max_episode_length', default=300, type=int, help='Number of steps for each episode (num_episode = train_iter/max_episode_length')
    parser.add_argument('--validate_episodes', default=20, type=int, help='Number of episodes to perform validation')
    parser.add_argument('--validate_steps', default=100000, type=int, help='Validation step interval (only validate each validation step)')
    # validate 2e4
    parser.add_argument('--epsilon', default=8000000, type=int, help='linear decay of exploration policy')
    # epsilon 5e4
    # Random process for action (Gaussian-Markov process)
    parser.add_argument('--ou_theta', default=0.015, type=float, help='Noise theta')
    parser.add_argument('--ou_sigma', default=0.02, type=float, help='Noise sigma')
    parser.add_argument('--ou_mu', default=0.0, type=float, help='Noise mu')
    # User convenience parameter
    parser.add_argument('--output', default='output_ddpg_3layers_0809', type=str, help='Output root')
    parser.add_argument('--debug', dest='debug', action='store_true', help='Debug')
    parser.add_argument('--seed', default=-1, type=int, help='Random seed')
    parser.add_argument('--resume', default='default', type=str, help='Resuming model path for testing')
    parser.add_argument('--pause_time', default=0, type=float, help='Pause time for evaluation')

